# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  job1:
    name: Job 1
    runs-on: macos-latest


    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
         python-version: 3.11
          

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run job 1
        run: echo "This is job 1"
         
      - name: Install allure tool
        run: brew install allure
        
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install allure-pytest
          
      - name: Clean docs
        run: rm -r docs
          
      - name: Save Allure Result
        run: pytest tests --alluredir=allure_results
       
      - name: Genereta Allure Report
        run: allure generate allure_results -o docs
      
  job2:
    needs: job1
    name: Job 2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run job 2
        run: echo "This is job 2"
     
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [job1, job2]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

