# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Automation Tests Runs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  job1:
    name: Setups Report
    runs-on: ubuntu-latest
    steps:
     
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
         python-version: 3.11
         
      - name: Install allure tool
        run: |
          npm install -g allure-commandline --save-dev
              
        
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install allure-pytest
          
      - name: Clean docs
        run: rm -r docs
                  
      - name: Save Allure Result
        continue-on-error: true
        run: pytest tests --alluredir=allure_results

      - name: Define Enviroment 
        run: |
          sudo touch allure_results/environment.properties
          echo -e 'Browser=Chrome\nBrowser.Version=114.0\nStand=Localhost' | sudo tee -a allure_results/environment.properties
          
      - name: Genereta Allure Report
        run: allure generate allure_results -o docs 
        
      - name: Generate Executors
        run: |
          truncate -s 0 docs/widgets/executors.json
          echo '[{"name": "GitHub Actions","type": "github actions","url": "http://example.org","buildOrder": 13,"buildName": "Demo Session","buildUrl": "http://example.org/build#13","reportUrl": "http://example.org/build#13/AllureReport","reportName": "Demo allure report"}]' >> docs/widgets/executors.json
          cat docs/widgets/executors.json

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        
  job2:
   name: Pytest Run Test
   runs-on: ubuntu-latest
   steps:
   
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
         python-version: 3.11
 
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
        
      - name: Run Tests
        continue-on-error: true
        run: |
          pytest -v tests
  job3:
      name: Save Allure Runs History
      runs-on: ubuntu-latest
      steps:

        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.11

        - name: Install allure tool
          run: |
            npm install -g allure-commandline --save-dev

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            python -m pip install pytest
            python -m pip install allure-pytest

        - name: Clean docs
          run: rm -r docs

        - name: Save Allure Result
          continue-on-error: true
          run: pytest tests --alluredir=allure_results

        - name: Define Environment
          run: |
            sudo touch allure_results/environment.properties
            echo -e 'Browser=Chrome\nBrowser.Version=114.0\nStand=Localhost' | sudo tee -a allure_results/environment.properties

        - name: Generate Allure Report
          run: allure generate allure_results -o docs

        - name: Copy History
          run: |
                  mkdir -p ./allure_results/history
                  ls ./allure_results
                  cp -r ./docs/history/* ./allure_results/history/
                  ls ./allure_results/history/

        - name: push
        - run: |
                  git config user.name Ryzk14
                  git config user.email Ryzhko14@gmail.com
                  git add .
                  git commit -m "generated"
                  git push
#      - name: Checkout code
#        uses: actions/checkout@v3
#        with:
#            repository: Ryzk14/IronBranch
#            path: allure_results/History

  Allure_Report:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
